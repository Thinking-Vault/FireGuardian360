-- Atualizado em 2025-05-27  
-- Projeto de Monitoramento e Combate às Queimadas: DDL Corrigida e Padronizada

-- Tabela USUARIO (Usuários)
CREATE TABLE USUARIO (
    ID_USR            NUMBER        NOT NULL,
    DS_USR_EMAIL      VARCHAR2(255) NOT NULL,
    TX_USR_PSW_HASH   VARCHAR2(255) NOT NULL,
    DH_USR_CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    NM_USR_NAME       VARCHAR2(150) NOT NULL,
    SG_USR_ROLE       VARCHAR2(20)  DEFAULT 'USER'
) LOGGING;

ALTER TABLE USUARIO
    ADD CONSTRAINT PK_USUARIO PRIMARY KEY (ID_USR);
ALTER TABLE USUARIO
    ADD CONSTRAINT UK_USUARIO_EMAIL UNIQUE (DS_USR_EMAIL);

COMMENT ON TABLE USUARIO IS 'Entidade USUARIO: armazena os usuários do sistema.';
COMMENT ON COLUMN USUARIO.ID_USR IS 'PK: identificador único do usuário.';
COMMENT ON COLUMN USUARIO.DS_USR_EMAIL IS 'E-mail do usuário (único, obrigatório).';
COMMENT ON COLUMN USUARIO.TX_USR_PSW_HASH IS 'Hash da senha do usuário.';
COMMENT ON COLUMN USUARIO.DH_USR_CREATED_AT IS 'Data e hora de criação do registro.';
COMMENT ON COLUMN USUARIO.NM_USR_NAME IS 'Nome completo do usuário.';
COMMENT ON COLUMN USUARIO.SG_USR_ROLE IS 'Sigla do perfil/permissão do usuário.';

-- Tabela VEGETACAO (Tipos de Vegetação)
CREATE TABLE VEGETACAO (
    ID_VGT          NUMBER        NOT NULL,
    NM_VGT_TIPO     VARCHAR2(100) NOT NULL,
    DS_VGT_DESC     VARCHAR2(500),
    PC_VGT_RISCO    NUMBER(3,2)   DEFAULT 0.00
) LOGGING;

ALTER TABLE VEGETACAO
    ADD CONSTRAINT PK_VEGETACAO PRIMARY KEY (ID_VGT);

COMMENT ON TABLE VEGETACAO IS 'Entidade VEGETACAO: tipos de vegetação cadastrados no sistema.';
COMMENT ON COLUMN VEGETACAO.ID_VGT IS 'PK: identificador único do tipo de vegetação.';
COMMENT ON COLUMN VEGETACAO.NM_VGT_TIPO IS 'Nome do tipo de vegetação (cerrado, floresta etc.).';
COMMENT ON COLUMN VEGETACAO.DS_VGT_DESC IS 'Descrição geral do tipo de vegetação.';
COMMENT ON COLUMN VEGETACAO.PC_VGT_RISCO IS 'Probabilidade média de risco de queimada.';

-- Sequence e Trigger para VEGETACAO
CREATE SEQUENCE SQ_VEGETACAO START WITH 1 NOCACHE ORDER;
CREATE OR REPLACE TRIGGER TRG_VEGETACAO_ID
BEFORE INSERT ON VEGETACAO
FOR EACH ROW
WHEN (NEW.ID_VGT IS NULL)
BEGIN
    SELECT SQ_VEGETACAO.NEXTVAL INTO :NEW.ID_VGT FROM DUAL;
END;
/

-- Tabela SENSOR_DATA (Dados dos Sensores)
CREATE TABLE SENSOR_DATA (
    ID_SNS              INTEGER       NOT NULL,
    DH_SNS_COLETADO     TIMESTAMP WITH LOCAL TIME ZONE NOT NULL,
    TP_SNS_MT           VARCHAR2(50)  NOT NULL,
    VL_SNS_VAL          NUMBER        NOT NULL,
    MD_SNS_LAT          NUMBER(9,6)   NOT NULL,
    MD_SNS_LNG          NUMBER(9,6)   NOT NULL,
    ID_VGT_VEGETACAO    NUMBER        NOT NULL
) LOGGING;

ALTER TABLE SENSOR_DATA
    ADD CONSTRAINT PK_SENSOR_DATA PRIMARY KEY (ID_SNS, DH_SNS_COLETADO);
ALTER TABLE SENSOR_DATA
    ADD CONSTRAINT FK_SENSOR_DATA_VEGETACAO FOREIGN KEY (ID_VGT_VEGETACAO)
        REFERENCES VEGETACAO (ID_VGT);

COMMENT ON TABLE SENSOR_DATA IS 'Entidade SENSOR_DATA: dados coletados por sensores ambientais.';
COMMENT ON COLUMN SENSOR_DATA.ID_SNS IS 'PK: identificador do sensor.';
COMMENT ON COLUMN SENSOR_DATA.DH_SNS_COLETADO IS 'PK: data e hora da coleta.';
COMMENT ON COLUMN SENSOR_DATA.TP_SNS_MT IS 'Tipo de medida (temperatura, umidade etc.).';
COMMENT ON COLUMN SENSOR_DATA.VL_SNS_VAL IS 'Valor da medição.';
COMMENT ON COLUMN SENSOR_DATA.MD_SNS_LAT IS 'Latitude da coleta.';
COMMENT ON COLUMN SENSOR_DATA.MD_SNS_LNG IS 'Longitude da coleta.';
COMMENT ON COLUMN SENSOR_DATA.ID_VGT_VEGETACAO IS 'FK → VEGETACAO.ID_VGT: tipo de vegetação no local.';

-- Tabela ALERTA (Alertas de Usuários)
CREATE TABLE ALERTA (
    ID_ALT             NUMBER        NOT NULL,
    ID_USR             NUMBER        NOT NULL,
    TP_ALT             VARCHAR2(50)  NOT NULL,
    NR_ALT_LEVEL       NUMBER(2)     DEFAULT 1,
    DH_ALT_CREATED     TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    MD_ALT_LAT         NUMBER(9,6)   NOT NULL,
    MD_ALT_LNG         NUMBER(9,6)   NOT NULL,
    ID_SNS              INTEGER       NOT NULL,
    DH_SNS_COLETADO     TIMESTAMP WITH LOCAL TIME ZONE NOT NULL
) LOGGING;

ALTER TABLE ALERTA
    ADD CONSTRAINT PK_ALERTA PRIMARY KEY (ID_ALT);
ALTER TABLE ALERTA
    ADD CONSTRAINT FK_ALERTA_USUARIO FOREIGN KEY (ID_USR)
        REFERENCES USUARIO (ID_USR);
ALTER TABLE ALERTA
    ADD CONSTRAINT FK_ALERTA_SENSOR_DATA FOREIGN KEY (ID_SNS, DH_SNS_COLETADO)
        REFERENCES SENSOR_DATA (ID_SNS, DH_SNS_COLETADO);

COMMENT ON TABLE ALERTA IS 'Entidade ALERTA: registra alertas gerados pelos usuários.';
COMMENT ON COLUMN ALERTA.ID_ALT IS 'PK: identificador único do alerta.';
COMMENT ON COLUMN ALERTA.ID_USR IS 'FK → USUARIO.ID_USR: usuário que gerou o alerta.';
COMMENT ON COLUMN ALERTA.TP_ALT IS 'Tipo do alerta (ex.: CHUVA, FOGO).';
COMMENT ON COLUMN ALERTA.NR_ALT_LEVEL IS 'Nível de gravidade do alerta.';
COMMENT ON COLUMN ALERTA.DH_ALT_CREATED IS 'Data e hora em que o alerta foi criado.';
COMMENT ON COLUMN ALERTA.MD_ALT_LAT IS 'Latitude do ponto do alerta.';
COMMENT ON COLUMN ALERTA.MD_ALT_LNG IS 'Longitude do ponto do alerta.';
COMMENT ON COLUMN ALERTA.ID_SNS IS 'FK → SENSOR_DATA.ID_SNS: sensor que detectou.';
COMMENT ON COLUMN ALERTA.DH_SNS_COLETADO IS 'FK → SENSOR_DATA.DH_SNS_COLETADO: timestamp da coleta do sensor.';
